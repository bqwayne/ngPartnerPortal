@import '../core/style/variables';
@import '../core/theming/vdlPalette';

vdl-input-container {
  display: inline-block;
  position: relative;
  font-family: $vdl-font-family;
  font-size: rem(1.6);
  line-height: normal;

  // To avoid problems with text-align.
  text-align: left;

  [dir='rtl'] & {
    text-align: right;
  }
}

// Global wrapper. We need to apply margin to the element for spacing, but
// cannot apply it to the host element directly.
.vdl-input-wrapper {
  margin: 1rem 0;
  // Account for the underline which has 4px of margin + 2px of border.
  padding-bottom: 6px;
}

// We use a table layout to baseline align the prefix and suffix classes.
// The underline is outside of it so it can cover all of the elements under
// this table.
// Flex does not respect the baseline. What we really want is akin to a table
// as want an inline-block where elements don't wrap.
.vdl-input-table {
  display: inline-table;
  flex-flow: column;
  vertical-align: bottom;
  width: 100%;

  & > * {
    display: table-cell;
  }
}

.vdl-input-infix {
  position: relative;
  width: 100%;
}

.vdl-input-element {
  border: none;
  outline: none;
  padding: 0;
  width: 100%;
  margin-top: 10px;
  color: vdl-color(7);
  background: transparent;
  font: inherit;

  &::-webkit-input-placeholder { /* WebKit, Blink, Edge */
    color:    vdl-color(6);
    font-style: italic;
  }
  &:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
    color:    vdl-color(6);
    opacity:  1;
    font-style: italic;
  }
  &::-moz-placeholder { /* Mozilla Firefox 19+ */
    color:    vdl-color(6);
    opacity:  1;
    font-style: italic;
  }
  &:-ms-input-placeholder { /* Internet Explorer 10-11 */
    color:    vdl-color(6);
    font-style: italic;
  }

  .vdl-end & {
    text-align: right;

    [dir='rtl'] & {
      text-align: left;
    }
  }
}

// Placeholder colors. Required is used for the `*` star shown in the label.
$input-label-color: vdl-color(7);
$input-floating-label-color: vdl-color(10);
$input-required-label-color: vdl-color(17);

// Underline colors.
$input-underline-color: vdl-color(7);
$input-underline-focused-color: vdl-color(10);

.vdl-input-label {
  color: $input-label-color;

  // The label is after the <input>, but needs to be aligned top-left of the
  // infix <div>.
  position: absolute;
  left: 0;
  top: 0;
  display: block;
  padding-bottom: 10px;
  font-size: rem(1.4);
  pointer-events: none;  // We shouldn't catch mouse events (let them through).
  z-index: 1;

  // :focus is applied to the input, but we apply vdl-focused to the other elements
  // that need to listen to it.
  &.vdl-focused {
    color: $input-floating-label-color;
  }

  // Put ellipsis text overflow.
  width: 100%;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow-x: hidden;

  transform: translateY(0);
  transform-origin: bottom left;
  transition: transform $swift-ease-out-duration $swift-ease-out-timing-function,
  color $swift-ease-out-duration $swift-ease-out-timing-function,
  width $swift-ease-out-duration $swift-ease-out-timing-function;

  &.vdl-disabled {
    color: vdl-color(5);
  }

  &.vdl-empty {
    display: block;
    cursor: text;
  }

  &.vdl-empty {
    &.vdl-required-error {
      &.vdl-focused {
        color: vdl-color(7);
      }
    }
  }

  [dir='rtl'] & {
    transform-origin: bottom right;
    left: auto;
    right: 0;
  }
}

.vdl-input-element:disabled {
  color: vdl-color(6);
}

.vdl-label-required {
  color: vdl-color(17);
}

.vdl-input-underline {
  border-color: $input-underline-color;
  position: absolute;
  height: 1px;
  width: 100%;
  margin-top: 10px;
  border-top-width: 1px;
  border-top-style: solid;

  &.vdl-focused {
    border-color: $input-underline-focused-color;
    border-top-width: 2px;
  }

  &.vdl-required-error {
    border-color: vdl-color(17);
    border-top-width: 1px;
  }

  &.vdl-disabled {
    border-color: vdl-color(5);
  }
}

.vdl-hint-container {
  display: block;
  position: absolute;
  font-size: rem(1.2);
  line-height: rem(1.2);
  bottom: -0.5rem;
  color: vdl-color(17);

  &.vdl-right {
    right: 0;
  }

  [dir='rtl'] & {
    right: 0;
    left: auto;

    &.vdl-right {
      right: auto;
      left: 0;
    }
  }
}

.vdl-char-count {
  display: block;
  position: absolute;
  font-size: rem(1.2);
  line-height: rem(1.2);
  bottom: -0.5rem;

  &.vdl-right {
    right: 0;
  }

  [dir='rtl'] & {
    right: 0;
    left: auto;

    &.vdl-right {
      right: auto;
      left: 0;
    }
  }
}

vdl-icon {
  height: 16px;
  width: 16px;
}

.vdl-input-suffix-icons {
  button[vdl-icon-button] {
    line-height: 0;
  }
}

.vdl-info-circle {
  color: vdl-color(7);
}

.vdl-error-circle {
  color: vdl-color(17);
}

.vdl-success-check {
  color: vdl-color(15);
}

.vdl-search {
  cursor: pointer;
  color: vdl-color(7);
}

.vdl-clear {
  color: vdl-color(7);
  cursor: pointer;
}

.vdl-password-eye {
  color: vdl-color(7);
  cursor: pointer;
}

.vdl-password-eye-slash {
  color: vdl-color(7);
  cursor: pointer;
}

button:focus vdl-icon {
  color: vdl-color(11);
}

.vdl-hide-clear-icon {
  visibility: hidden;
}

.vdl-input-suffix-icons {
  white-space: nowrap;
}

.vdl-input-suffix-icons,
.vdl-input-suffix-icons > * {
  display: inline;
}

.vdl-divider {
  border-left: 1px solid vdl-color(3);
  height: rem(1.6);
  margin-left: 10px;
  margin-right: 10px;
}

.vdl-char-count-low {
  color: vdl-color(16);
}

.vdl-char-count-limit {
  color: vdl-color(17);
}