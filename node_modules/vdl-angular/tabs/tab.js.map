{"version":3,"file":"tab.js","sourceRoot":"","sources":["../../../src/lib/tabs/tab.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EAAC,cAAc,EAAC,MAAM,uBAAuB;OAC7C,EACL,gBAAgB,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAU,YAAY,EACrE,SAAS,EACV,MAAM,eAAe;OACf,EAAC,qBAAqB,EAAC,MAAM,mCAAmC;OAEhE,EAAC,WAAW,EAAC,MAAM,aAAa;AAOvC;IAiCE,gBAAoB,iBAAmC;QAAnC,sBAAiB,GAAjB,iBAAiB,CAAkB;QA1BvD,8EAA8E;QAC9D,cAAS,GAAW,EAAE,CAAC;QAEvC,4DAA4D;QACpD,mBAAc,GAAmB,IAAI,CAAC;QAG9C;;;WAGG;QACH,aAAQ,GAAW,IAAI,CAAC;QAExB;;;WAGG;QACH,WAAM,GAAW,IAAI,CAAC;QAEd,cAAS,GAAG,KAAK,CAAC;IAOiC,CAAC;IArB5D,sBAAI,2BAAO;aAAX,cAAgC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;;;OAAA;IAkB7D,sBAAI,4BAAQ;aACZ,cAA0B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAHlD,kCAAkC;aAElC,UAAa,KAAc,IAAI,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAK/E,yBAAQ,GAAR;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAClF,CAAC;IAnCD;QAAC,YAAY,CAAC,WAAW,CAAC;;iDAAA;IAG1B;QAAC,SAAS,CAAC,WAAW,CAAC;;4CAAA;IAGvB;QAAC,KAAK,CAAC,OAAO,CAAC;;6CAAA;IAqBf;QAAC,KAAK,EAAE;;;0CAAA;IAlCV;QAAC,SAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,SAAS;YACnB,WAAW,EAAE,UAAU;SACxB,CAAC;;cAAA;IAuCF,aAAC;AAAD,CAAC,AAtCD,IAsCC","sourcesContent":["import {TemplatePortal} from '../core/portal/portal';\nimport {\n  ViewContainerRef, Input, TemplateRef, ViewChild, OnInit, ContentChild,\n  Component\n} from '@angular/core';\nimport {coerceBooleanProperty} from '../core/coercion/boolean-property';\n\nimport {VdlTabLabel} from './tab-label';\n\n@Component({\n  moduleId: module.id,\n  selector: 'vdl-tab',\n  templateUrl: 'tab.html',\n})\nexport class VdlTab implements OnInit {\n  /** Content for the tab label given by <template vdl-tab-label>. */\n  @ContentChild(VdlTabLabel) templateLabel: VdlTabLabel;\n\n  /** Template inside the VdlTab view that contains an <ng-content>. */\n  @ViewChild(TemplateRef) _content: TemplateRef<any>;\n\n  /** The plain text label for the tab, used when there is no template label. */\n  @Input('label') textLabel: string = '';\n\n  /** The portal that will be the hosted content of the tab */\n  private _contentPortal: TemplatePortal = null;\n  get content(): TemplatePortal { return this._contentPortal; }\n\n  /**\n   * The relatively indexed position where 0 represents the center, negative is left, and positive\n   * represents the right.\n   */\n  position: number = null;\n\n  /**\n   * The initial relatively index origin of the tab if it was created and selected after there\n   * was already a selected tab. Provides context of what position the tab should originate from.\n   */\n  origin: number = null;\n\n  private _disabled = false;\n\n  /** Whether the tab is disabled */\n  @Input()\n  set disabled(value: boolean) { this._disabled = coerceBooleanProperty(value); }\n  get disabled(): boolean { return this._disabled; }\n\n  constructor(private _viewContainerRef: ViewContainerRef) { }\n\n  ngOnInit() {\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n  }\n}\n"]}