{"version":3,"file":"checkbox.js","sourceRoot":"","sources":["../../../src/lib/checkbox/checkbox.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  Renderer,\n  ViewEncapsulation,\n  forwardRef,\n  NgModule,\n  ModuleWithProviders,\n  ViewChild,\n} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\nimport {coerceBooleanProperty} from '../core';\nimport {VdlHintModule} from '../core/shared/hint/hint';\nimport {VdlIconRegistry} from '../icon/icon-registry';\nimport {VdlIconModule} from '../icon/icon';\nimport {VdlPopoverModule} from '../popover/index';\n\nlet nextId = 0;\n\n/**\n * Provider Expression that allows vdl-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const VDL_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => VdlCheckbox),\n  multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n  /** The initial state of the component before any user interaction. */\n  Init,\n  /** The state representing the component when it's becoming checked. */\n  Checked,\n  /** The state representing the component when it's becoming unchecked. */\n  Unchecked,\n  /** The state representing the component when it's becoming indeterminate. */\n  Indeterminate\n}\n\n/** Change event object emitted by VdlCheckbox. */\nexport class VdlCheckboxChange {\n  source: VdlCheckbox;\n  checked: boolean;\n}\n\n/**\n * A vdl checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A VdlCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://www.google.com/design/spec/components/selection-controls.html\n */\n@Component({\n  moduleId: module.id,\n  selector: 'vdl-checkbox',\n  templateUrl: 'checkbox.html',\n  styleUrls: ['checkbox.css'],\n  host: {\n    '[class.vdl-checkbox-indeterminate]': 'indeterminate',\n    '[class.vdl-checkbox-checked]': 'checked',\n    '[class.vdl-checkbox-disabled]': 'disabled',\n    '[class.vdl-checkbox-label-before]': 'labelPosition == \"before\"',\n    '[class.vdl-checkbox-focused]': '_hasFocus',\n    '[class.vdl-checkbox-error]': 'errorText && errorText.length > 0',\n  },\n  providers: [VDL_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VdlCheckbox implements ControlValueAccessor {\n  @Input('aria-label') ariaLabel: string = '';\n  @Input('aria-labelledby') ariaLabelledby: string = null;\n  @Input() id: string = `vdl-checkbox-${++nextId}`;\n  @Input() label: string;\n  @Input() tabindex: number = 0;\n  @Input() name: string = null;\n  @Input() hintText: string;\n  @Input() errorText: string;\n  @Input() labelPosition: 'before' | 'after' = 'after';\n\n\n  /** ID of the native input element inside `<vdl-checkbox>` */\n  get inputId(): string {\n    return `input-${this.id}`;\n  }\n\n  private _required: boolean;\n\n  /** Whether the checkbox is required. */\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value) { this._required = coerceBooleanProperty(value); }\n\n  private _disabled: boolean = false;\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n\n  @Output() change: EventEmitter<VdlCheckboxChange> = new EventEmitter<VdlCheckboxChange>();\n  @Output() indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  @ViewChild('input') _inputElement: ElementRef;\n\n  onTouched: () => any = () => {};\n\n  private _currentAnimationClass: string = '';\n\n  private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n  private _checked: boolean = false;\n\n  private _indeterminate: boolean = false;\n\n  private _controlValueAccessorChangeFn: (value: any) => void = (value) => {};\n\n  _hasFocus: boolean = false;\n\n  constructor(private _renderer: Renderer,\n              private _elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef,\n              vdlIconRegistry: VdlIconRegistry) {\n    vdlIconRegistry.registerFontClassAlias('fontawesome', 'fa');\n  }\n\n  @Input() get checked() {\n    return this._checked;\n  }\n\n  set checked(checked: boolean) {\n    if (checked != this.checked) {\n      if (this._indeterminate) {\n        this._indeterminate = false;\n        this.indeterminateChange.emit(this._indeterminate);\n      }\n      this._checked = checked;\n      this._transitionCheckState(\n          this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n   * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n   * checkable items. Note that whenever `checked` is set, indeterminate is immediately set to\n   * false. This differs from the web platform in that indeterminate state on native\n   * checkboxes is only removed when the user manually checks the checkbox (rather than setting the\n   * `checked` property programmatically). However, we feel that this behavior is more accommodating\n   * to the way consumers would envision using this component.\n   */\n  @Input() get indeterminate() {\n    return this._indeterminate;\n  }\n\n  set indeterminate(indeterminate: boolean) {\n    let changed =  indeterminate != this._indeterminate;\n    this._indeterminate = indeterminate;\n    if (this._indeterminate) {\n      this._transitionCheckState(TransitionCheckState.Indeterminate);\n    } else {\n      this._transitionCheckState(\n          this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n    }\n    if (changed) {\n      this.indeterminateChange.emit(this._indeterminate);\n    }\n  }\n\n  /**\n   * Sets the model value. Implemented as part of ControlValueAccessor.\n   * @param value Value to be set to the model.\n   */\n  writeValue(value: any) {\n    this.checked = !!value;\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  private _transitionCheckState(newState: TransitionCheckState) {\n    let oldState = this._currentCheckState;\n    let renderer = this._renderer;\n    let elementRef = this._elementRef;\n\n    if (oldState === newState) {\n      return;\n    }\n\n    if (this._currentAnimationClass.length > 0) {\n      renderer.setElementClass(elementRef.nativeElement, this._currentAnimationClass, false);\n    }\n\n    this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(\n        oldState, newState);\n    this._currentCheckState = newState;\n\n    if (this._currentAnimationClass.length > 0) {\n      renderer.setElementClass(elementRef.nativeElement, this._currentAnimationClass, true);\n    }\n  }\n\n  private _emitChangeEvent() {\n    let event = new VdlCheckboxChange();\n    event.source = this;\n    event.checked = this.checked;\n\n    this._controlValueAccessorChangeFn(this.checked);\n    this.change.emit(event);\n  }\n\n  _onInputFocus() {\n    this._hasFocus = true;\n  }\n\n  _onInputBlur() {\n    this._hasFocus = false;\n    this.onTouched();\n  }\n\n  toggle(): void {\n    this.checked = !this.checked;\n  }\n\n  _onInteractionEvent(event: Event) {\n    event.stopPropagation();\n\n    if (!this.disabled) {\n      this.toggle();\n      this._emitChangeEvent();\n    }\n  }\n\n  focus(): void {\n    this._renderer.invokeElementMethod(this._inputElement.nativeElement, 'focus');\n    this._onInputFocus();\n  }\n\n  _onInputClick(event: Event) {\n    // We have to stop propagation for click events on the visual hidden input element.\n    // By default, when a user clicks on a label element, a generated click event will be\n    // dispatched on the associated input element. Since we are using a label element as our\n    // root container, the click event on the `checkbox` will be executed twice.\n    // The real click event will bubble up, and the generated click event also tries to bubble up.\n    // This will lead to multiple click events.\n    // Preventing bubbling for the second event will solve that issue.\n    event.stopPropagation();\n  }\n\n  private _getAnimationClassForCheckStateTransition(\n      oldState: TransitionCheckState, newState: TransitionCheckState): string {\n    let animSuffix: string;\n\n    switch (oldState) {\n    case TransitionCheckState.Init:\n      // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n      // [checked] bound to it.\n      if (newState === TransitionCheckState.Checked) {\n        animSuffix = 'unchecked-checked';\n      } else {\n        return '';\n      }\n      break;\n    case TransitionCheckState.Unchecked:\n      animSuffix = newState === TransitionCheckState.Checked ?\n          'unchecked-checked' : 'unchecked-indeterminate';\n      break;\n    case TransitionCheckState.Checked:\n      animSuffix = newState === TransitionCheckState.Unchecked ?\n          'checked-unchecked' : 'checked-indeterminate';\n      break;\n    case TransitionCheckState.Indeterminate:\n      animSuffix = newState === TransitionCheckState.Checked ?\n          'indeterminate-checked' : 'indeterminate-unchecked';\n    }\n\n    return `vdl-checkbox-anim-${animSuffix}`;\n  }\n}\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    VdlHintModule,\n    VdlIconModule,\n    VdlPopoverModule\n  ],\n  exports: [VdlCheckbox],\n  declarations: [VdlCheckbox]\n})\nexport class VdlCheckboxModule {\n  /** @deprecated */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: VdlCheckboxModule,\n      providers: []\n    };\n  }\n}\n"]}