import { EventEmitter, QueryList, AfterContentInit, OnDestroy, ModuleWithProviders } from '@angular/core';
import 'rxjs/add/operator/share';
import { VdlDataTableHeaderSelectableRow, VdlDataTableSelectableRow, ITableSelectableRowSelectionChange } from './data-table-selectable-tr';
/**
 * Selectable change event data
 */
export interface ITableSelectionChange {
    name: string;
    allSelected: boolean;
    values: any[];
}
export declare class VdlDataTable implements AfterContentInit, OnDestroy {
    selectable: boolean;
    onSelectableAll: EventEmitter<any>;
    onSelectableChange: EventEmitter<any>;
    _masterRow: VdlDataTableHeaderSelectableRow;
    _rows: QueryList<VdlDataTableSelectableRow>;
    _listeners: EventEmitter<any>[];
    selected: Array<string>;
    constructor();
    change(event: ITableSelectableRowSelectionChange): void;
    /**
     * @returns {Array<string>}
     */
    _getRowsValues(): any[];
    _unsubscribeChildren(): void;
    _updateChildrenListener(list: QueryList<VdlDataTableSelectableRow>): void;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
}
export declare class VdlDataTableModule {
    static forRoot(): ModuleWithProviders;
}
