{"version":3,"file":"grid-tile.js","sourceRoot":"","sources":["../../../src/lib/grid-list/grid-tile.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  ViewEncapsulation,\n  Renderer,\n  ElementRef,\n  Input,\n  ContentChildren,\n  QueryList,\n  AfterContentInit, Directive\n} from '@angular/core';\nimport {VdlLine, VdlLineSetter} from '../core';\nimport {coerceToNumber} from './grid-list-measure';\n\n@Component({\n  moduleId: module.id,\n  selector: 'vdl-grid-tile',\n  host: {\n    'role': 'listitem',\n    '[class.vdl-grid-tile]': 'true',\n  },\n  templateUrl: 'grid-tile.html',\n  styleUrls: ['grid-list.css'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class VdlGridTile {\n  _rowspan: number = 1;\n  _colspan: number = 1;\n\n  constructor(private _renderer: Renderer, private _element: ElementRef) {}\n\n  /** Amount of rows that the grid tile takes up. */\n  @Input()\n  get rowspan() { return this._rowspan; }\n  set rowspan(value) { this._rowspan = coerceToNumber(value); }\n\n  /** Amount of columns that the grid tile takes up. */\n  @Input()\n  get colspan() { return this._colspan; }\n  set colspan(value) { this._colspan = coerceToNumber(value); }\n\n  /**\n   * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n   * \"Changed after checked\" errors that would occur with HostBinding.\n   */\n  _setStyle(property: string, value: string): void {\n    this._renderer.setElementStyle(this._element.nativeElement, property, value);\n  }\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'vdl-grid-tile-header, vdl-grid-tile-footer',\n  templateUrl: 'grid-tile-text.html'\n})\nexport class VdlGridTileText implements AfterContentInit {\n  /**\n   *  Helper that watches the number of lines in a text area and sets\n   * a class on the host element that matches the line count.\n   */\n  _lineSetter: VdlLineSetter;\n  @ContentChildren(VdlLine) _lines: QueryList<VdlLine>;\n\n  constructor(private _renderer: Renderer, private _element: ElementRef) {}\n\n  ngAfterContentInit() {\n    this._lineSetter = new VdlLineSetter(this._lines, this._renderer, this._element);\n  }\n}\n\n/**\n * Directive whose purpose is to add the vdl- CSS styling to this selector.\n */\n@Directive({\n  selector: '[vdl-grid-avatar]',\n  host: {\n    '[class.vdl-grid-avatar]': 'true'\n  }\n})\nexport class VdlGridAvatarCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the vdl- CSS styling to this selector.\n */\n@Directive({\n  selector: 'vdl-grid-tile-header',\n  host: {\n    '[class.vdl-grid-tile-header]': 'true'\n  }\n})\nexport class VdlGridTileHeaderCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the vdl- CSS styling to this selector.\n */\n@Directive({\n  selector: 'vdl-grid-tile-footer',\n  host: {\n    '[class.vdl-grid-tile-footer]': 'true'\n  }\n})\nexport class VdlGridTileFooterCssMatStyler {}\n"]}