import { OnChanges, SimpleChange, ElementRef, Renderer, ModuleWithProviders } from '@angular/core';
/**
 * Material design button.
 */
export declare class VdlButton {
    private _elementRef;
    private _renderer;
    /** Whether the button has focus from the keyboard (not the mouse). Used for class binding. */
    _isKeyboardFocused: boolean;
    /** Whether a mousedown has occurred on this element in the last 100ms. */
    _isMouseDown: boolean;
    /** Disable button */
    private _disabled;
    /** Get/Set disabled. */
    disabled: boolean;
    constructor(_elementRef: ElementRef, _renderer: Renderer);
    _setMousedown(): void;
    _setKeyboardFocus(): void;
    _removeKeyboardFocus(): void;
    /** Focuses the button. */
    focus(): void;
    _getHostElement(): any;
    _isRoundButton(): any;
}
/**
 * link button
 */
export declare class VdlAnchor extends VdlButton implements OnChanges {
    elementRef: ElementRef;
    renderer: Renderer;
    constructor(elementRef: ElementRef, renderer: Renderer);
    ngOnChanges(changes: {
        [propertyName: string]: SimpleChange;
    }): void;
    _disabledChangeHandler(previousValue: boolean, currentValue: boolean): void;
    /** @docs-private */
    readonly tabIndex: number;
    readonly _isAriaDisabled: string;
    _haltDisabledEvents(event: Event): void;
}
export declare class VdlButtonModule {
    static forRoot(): ModuleWithProviders;
}
